(()=>{var a=globalThis.crypto,p=i;globalThis.isPasswordLeaked=i;async function i(r){if(typeof r!="string")throw new Error("Password must be a string");let s=await a.subtle.digest("SHA-1",new TextEncoder().encode(r)),e=Array.from(new Uint8Array(s)).map(d=>d.toString(16).padStart(2,"0")).join(""),n=e.substring(0,5).toUpperCase();return(await(await fetch(`https://api.pwnedpasswords.com/range/${n}`)).text()).includes(e.substring(5).toUpperCase())}function c(r,s){if(typeof r!="string"){s(new Error("Password must be a string"),!1);return}a.subtle.digest("SHA-1",new TextEncoder().encode(r)).catch(e=>s(e,!1)).then(e=>{let n=Array.from(new Uint8Array(e)).map(t=>t.toString(16).padStart(2,"0")).join(""),o=n.substring(0,5).toUpperCase();fetch(`https://api.pwnedpasswords.com/range/${o}`).then(t=>t.text()).then(t=>s(null,t.includes(n.substring(5).toUpperCase()))).catch(t=>s(t,!1))})}})();
//# sourceMappingURL=index.js.map
